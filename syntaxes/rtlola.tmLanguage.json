{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "RTLola",
	"patterns": [
		{
			"include": "#import"
		},
		{
			"include": "#input"
		},
		{
			"include": "#output"
		},
		{
			"include": "#trigger"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#block_comment"
		},
		{
			"include": "#line_comment"
		},
		{
			"include": "#number"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.rtlola",
					"match": "\\b(if|then|else)\\b"
				},
				{
					"name": "keyword.other.rtlola",
					"match": "\\b(input|output|trigger|import)\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.language.rtlola",
					"match": "\\b(true|false)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.rtlola",
			"begin": "\"",
			"end": "\"",
			"patterns": []
		},
		"line_comment": {
			"name": "comment.line.double-slash.rtlola",
			"begin": "//",
			"end": "$"
		},
		"block_comment": {
			"name": "comment.block.rtlola",
			"begin": "/\\*",
			"end": "\\*/"
		},
		"import": {
			"name": "meta.import.rtlola",
			"match": "\\b(import)(\\s+|(\\s*(/\\*((?!\\*/).)*\\*/)\\s*))([a-zA-Z][a-z_A-Z0-9]*)(?=\\s|/)",
			"captures": {
				"1": {
					"name": "keyword.other.rtlola"
				},
				"4": {
					"name": "comment.block.rtlola"
				},
				"6": {
					"name": "support.other.rtlola"
				}
			}
		},
		"input": {
			"name": "meta.input.rtlola",
			"match": "\\b(input)(\\s+|(\\s*(/\\*((?!\\*/).)*\\*/)\\s*))([a-zA-Z][a-z_A-Z0-9]*)(\\s*(/\\*((?!\\*/).)*\\*/)?\\s*):(\\s*(/\\*((?!\\*/).)*\\*/)?\\s*)([a-zA-Z][a-zA-Z_0-9]*)(?=\\s|/)",
			"captures": {
				"1": {
					"name": "keyword.other.rtlola"
				},
				"4": {
					"name": "comment.block.rtlola"
				},
				"6": {
					"name": "variable.other.rtlola"
				},
				"8": {
					"name": "comment.block.rtlola"
				},
				"11": {
					"name": "comment.block.rtlola"
				},
				"13": {
					"name": "entity.name.type.rtlola"
				}
			}
		},
		"output": {
			"name": "statement.output.rtlola",
			"begin": "(output)(\\s+|(\\s*(/\\*((?!\\*/).)*\\*/)\\s*))([a-zA-Z][a-z_A-Z0-9]*)((\\s*(/\\*((?!\\*/).)*\\*/)?\\s*):(\\s*(/\\*((?!\\*/).)*\\*/)?\\s*)([a-zA-Z][a-z_A-Z0-9]*))?",
			"end": "(?=(input|output|trigger))",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.rtlola"
				},
				"4": {
					"name": "comment.block.rtlola"
				},
				"6": {
					"name": "variable.other.rtlola"
				},
				"9": {
					"name": "comment.block.rtlola"
				},
				"12": {
					"name": "comment.block.rtlola"
				},
				"14": {
					"name": "entity.name.type.rtlola"
				}
			},
			"patterns": [
				{
					"include": "#keywords"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#block_comment"
				},
				{
					"include": "#line_comment"
				},
				{
					"include": "#frequency"
				},
				{
					"include": "#number"
				},
				{
					"include": "#expression"
				}
			]
		},
		"trigger": {
			"name": "statement.trigger.rtlola",
			"begin": "(trigger)",
			"end": "(?=(input|output|trigger))",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.rtlola"
				}
			},
			"patterns": [
				{
					"include": "#keywords"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#block_comment"
				},
				{
					"include": "#line_comment"
				},
				{
					"include": "#number"
				},
				{
					"include": "#expression"
				}
			]
		},
		"frequency": {
			"match": "@(\\s*(/\\*((?!\\*/).)*\\*/)?\\s*)((?:\\+\\-)?[0-9]+(\\.[0-9][0-9]*)?(e(\\+\\-)?[0-9]+)?(μHz|uHz|mHz|Hz|kHz|MHz|GHz)?)",
			"captures": {
				"2": {
					"name": "comment.block.rtlola"
				},
				"4": {
					"name": "constant.numeric.frequency.rtlola"
				}
			}
		},
		"number": {
			"match": "\\b((?:\\+\\-)?[0-9]+(\\.[0-9][0-9]*)?(e(\\+\\-)?[0-9]+)?)",
			"captures": {
				"1": {
					"name": "constant.numeric.rtlola"
				}
			}
		},
		"expression": {
			"patterns": [
				{
					"comment": "Output stream definition",
					"name": "keyword.operator.misc.rtlola",
					"match": ":="
				},
				{
					"comment": "Miscellaneous operator",
					"name": "keyword.operator.misc.rtlola",
					"match": "(=>|::|¬)"
				},
				{
					"comment": "Comparison operator",
					"name": "keyword.operator.comparison.rtlola",
					"match": "(∧|∨|\\bor\\b|\\and\\b|&&|\\|\\||==|(?<!:)=|!=)"
				},
				{
					"comment": "Assignment operator",
					"name": "keyword.operator.assignment.rtlola",
					"match": "(\\+=|-=|/=|\\*=|%=|\\^=|&=|\\|=|<<=|>>=)"
				},
				{
					"comment": "Arithmetic operator",
					"name": "keyword.operator.arithmetic.rtlola",
					"match": "(~|!|\\+\\+|\\+|--|-|/|\\*\\*|\\*|%|\\^|&|\\||<<|>>>=|>>>|>>)"
				},
				{
					"comment": "Comparison operator (second group because of regex precedence)",
					"name": "keyword.operator.comparison.rtlola",
					"match": "(<=|>=|<|>|&)"
				},
				{
					"match": "\\.(aggregate)\\(",
					"captures": {
						"1": {
							"name": "keyword.operator.access"
						}
					}
				},
				{
					"match": "\\.(hold)\\(",
					"captures": {
						"1": {
							"name": "keyword.operator.access"
						}
					}
				},
				{
					"match": "\\.(offset)\\(",
					"captures": {
						"1": {
							"name": "keyword.operator.access"
						}
					}
				},
				{
					"match": "\\.(defaults)\\(",
					"captures": {
						"1": {
							"name": "keyword.operator.default"
						}
					}
				}
			]
		}
	},
	"scopeName": "source.rtlola"
}